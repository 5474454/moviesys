{"version":3,"sources":["assets/defaultposter.png","services/CommonTypes.ts","pages/Home.tsx","components/MovieTable.tsx","services/MovieService.ts","redux/actions/MovieAction.ts","pages/movie/MovieList.tsx","components/ImgUploader.tsx","components/MovieForm.tsx","pages/movie/AddMovie.tsx","pages/movie/EditMovie.tsx","pages/Layout.tsx","redux/reducers/MovieReducer.ts","redux/reducers/RootReducer.ts","redux/store.ts","App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","SwitchType","react_default","a","createElement","React","Component","this","props","onLoad","_this","style","padding","input","width","marginBottom","display","value","condition","key","onChange","e","onKeyChange","target","onPressEnter","onSearch","es_button","type","icon","size","marginRight","onClick","_this2","title","dataIndex","render","poster","alt","className","src","defaultposterImg","filterDropdown","getFilterDropDown","bind","filterIcon","text","join","timeLong","isHot","record","es_switch","checked","newVal","onSwitchChange","_id","isComing","isClassic","id","react_router_dom","to","popconfirm","onConfirm","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","onDelete","message","success","stop","okText","cancelText","total","current","page","pageSize","limit","pagination","table","rowKey","dataSource","data","columns","getColumns","getPageConfig","handleChange","loading","isLoading","MovieService","classCallCheck","createClass","_add","movie","_yield$axios$post","axios","post","sent","abrupt","_x","apply","arguments","_edit","_callee2","_yield$axios$put","_context2","put","_x2","_x3","_delete2","_callee3","_yield$axios$delete","_context3","delete","_x4","_getMovieById","_callee4","_yield$axios$get","_context4","get","_x5","_getMovies","_callee5","_yield$axios$get2","_context5","params","_x6","saveMoviesAction","movies","payload","setLoadingAction","setConditionAction","deleteAction","changeSwitchAction","MovieAction","fetchMovies","_ref","dispatch","getState","curCondition","resp","getMovies","deleteMovie","_ref2","changeSwitch","_ref3","edit","defineProperty","connect","state","newState","_onDelete","newPage","MovieTable","showModal","uid","name","url","formData","FormData","append","filename","file","request","Request","action","method","body","fetch","then","json","err","error","upload","accept","listType","fileList","getFileList","customRequest","handleRequest","onRemove","onPreview","setState","getUploadContent","modal","visible","footer","onCancel","formItemLayout","labelCol","span","wrapperCol","offset","AllAreas","label","AreaGroups","Checkbox","Group","AllTypes","TypeGroups","MovieForm","preventDefault","form","validateFields","errors","result","getFieldsValue","onSubmit","history","push","getFieldDecorator","es_form","assign","handleSubmit","Item","rules","required","ImgUploader_default","options","input_number","min","step","initialValue","valuePropName","TextArea","htmlType","withRouter","Form","create","mapPropsToFields","obj","createFormField","console","log","getDefaultField","components_MovieForm","add","undefined","getMovieById","match","Header","Layout","Sider","Content","_Layout","layout","menu","mode","theme","react_router","path","component","Home","exact","MovieList","AddMovie","EditMovie","defaultState","totalPage","rootReducer","combineReducers","length","objectSpread","filter","m","Math","ceil","saveMovie","setCondition","setLoading","find","d","newMoive","newData","map","store","createStore","applyMiddleware","thunk","logger","App","es","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.85e65fec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultposter.b4e877ba.png\";","export interface IResponseError {\r\n    err: string\r\n    data: null\r\n}\r\n\r\nexport interface IResponseData<T> {\r\n    err: \"\"\r\n    data: T\r\n}\r\n\r\nexport interface IResponsePageData<T> {\r\n    err: \"\"\r\n    total: number\r\n    data: T[]\r\n}\r\n\r\nexport interface ISearchCondition {\r\n    page?: number\r\n    limit?: number\r\n    key?: string\r\n}\r\n\r\nexport enum SwitchType {\r\n    isHot = \"isHot\",\r\n    isComing = \"isComing\",\r\n    isClassic = \"isClassic\"\r\n}","import React from \"react\"\r\n\r\nexport default class extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <h1>\r\n                欢迎使用电影管理系统\r\n            </h1>\r\n        );\r\n    }\r\n}","import React from \"react\"\r\nimport { IMovieState } from \"../redux/reducers/MovieReducer\";\r\nimport { Table, Switch, Button, message, Popconfirm, Icon, Input } from \"antd\";\r\nimport { ColumnProps, PaginationConfig } from \"antd/lib/table\";\r\nimport { IMovie } from \"../services/MovieService\";\r\nimport defaultposterImg from \"../assets/defaultposter.png\"\r\nimport { SwitchType } from \"../services/CommonTypes\";\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nexport interface IMovieTableEvents {\r\n    /**\r\n     * 完成加载之后的事件\r\n     */\r\n    onLoad: () => void\r\n    onSwitchChange: (type: SwitchType, newState: boolean, id: string) => void\r\n    onDelete: (id: string) => Promise<void>\r\n    onChange: (newPage: number) => void\r\n    onKeyChange: (key: string) => void\r\n    onSearch: () => void\r\n}\r\n\r\nexport default class extends React.Component<IMovieState & IMovieTableEvents> {\r\n\r\n    componentDidMount() {\r\n        if (this.props.onLoad) {\r\n            this.props.onLoad();\r\n        }\r\n    }\r\n\r\n    private getFilterDropDown(p: any) {\r\n        return (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n                    value={this.props.condition.key}\r\n                    onChange={e => this.props.onKeyChange(e.target.value)}\r\n                    onPressEnter={this.props.onSearch}\r\n                />\r\n                <Button\r\n                    type=\"primary\"\r\n                    icon=\"search\"\r\n                    size=\"small\"\r\n                    style={{ width: 90, marginRight: 8 }}\r\n                    onClick={this.props.onSearch}\r\n                >\r\n                    搜索\r\n                </Button>\r\n                <Button\r\n                    size=\"small\"\r\n                    style={{ width: 90 }}\r\n                    onClick={()=>{\r\n                        this.props.onKeyChange(\"\")\r\n                        this.props.onSearch();\r\n                    }}\r\n                >\r\n                    重置\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getColumns(): ColumnProps<IMovie>[] {\r\n        return [\r\n            {\r\n                title: \"封面\",\r\n                dataIndex: \"poster\",\r\n                render: poster => {\r\n                    if (poster) {\r\n                        return <img alt=\"\" className=\"tablePoster\" src={poster} />\r\n                    }\r\n                    else {\r\n                        return <img alt=\"\" className=\"tablePoster\" src={defaultposterImg} />\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                title: \"名称\", dataIndex: \"name\",\r\n                filterDropdown: this.getFilterDropDown.bind(this),\r\n                filterIcon: <Icon type=\"search\" />\r\n            },\r\n            {\r\n                title: \"地区\",\r\n                dataIndex: \"areas\",\r\n                render: (text: string[]) => {\r\n                    return text.join(\", \");\r\n                }\r\n            },\r\n            {\r\n                title: \"类型\",\r\n                dataIndex: \"types\",\r\n                render: (text: string[]) => {\r\n                    return text.join(\", \");\r\n                }\r\n            },\r\n            {\r\n                title: \"时长\", dataIndex: \"timeLong\",\r\n                render(timeLong) {\r\n                    return timeLong + \"分钟\";\r\n                }\r\n            },\r\n            {\r\n                title: \"正在热映\",\r\n                dataIndex: \"isHot\",\r\n                render: (isHot, record) => {\r\n                    return <Switch checked={isHot} onChange={(newVal) => {\r\n                        this.props.onSwitchChange(SwitchType.isHot, newVal, record._id!);\r\n                    }} />\r\n                }\r\n            },\r\n            {\r\n                title: \"即将上映\",\r\n                dataIndex: \"isComing\",\r\n                render: (isHot, record) => {\r\n                    return <Switch checked={isHot} onChange={(newVal) => {\r\n                        this.props.onSwitchChange(SwitchType.isComing, newVal, record._id!);\r\n                    }} />\r\n                }\r\n            },\r\n            {\r\n                title: \"经典影片\",\r\n                dataIndex: \"isClassic\",\r\n                render: (isHot, record) => {\r\n                    return <Switch checked={isHot} onChange={(newVal) => {\r\n                        this.props.onSwitchChange(SwitchType.isClassic, newVal, record._id!);\r\n                    }} />\r\n                }\r\n            },\r\n            {\r\n                title: \"操作\",\r\n                dataIndex: \"_id\",\r\n                render: (id: string) => {\r\n                    return (\r\n                        <div>\r\n                            <NavLink to={\"/movie/edit/\" + id}>\r\n                                <Button type=\"primary\" size=\"small\">编辑</Button>\r\n                            </NavLink>\r\n                            <Popconfirm title=\"确定要删除吗?\" onConfirm={async () => {\r\n                                await this.props.onDelete(id);\r\n                                message.success('删除成功');\r\n                            }} okText=\"确定\" cancelText=\"取消\">\r\n                                <Button type=\"danger\" size=\"small\">删除</Button>\r\n                            </Popconfirm>\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n        ];\r\n    }\r\n\r\n    getPageConfig(): PaginationConfig | false {\r\n        if (this.props.total === 0) {\r\n            return false;\r\n        }\r\n        return {\r\n            current: this.props.condition.page,\r\n            pageSize: this.props.condition.limit,\r\n            total: this.props.total\r\n        };\r\n    }\r\n\r\n    handleChange(pagination: PaginationConfig) {\r\n        this.props.onChange(pagination.current!);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Table\r\n                rowKey=\"_id\" dataSource={this.props.data}\r\n                columns={this.getColumns()}\r\n                pagination={this.getPageConfig()}\r\n                onChange={this.handleChange.bind(this)}\r\n                loading={this.props.isLoading}\r\n            ></Table>\r\n        );\r\n    }\r\n}","import axios from \"axios\";\r\nimport { IResponseData, IResponseError, ISearchCondition, IResponsePageData } from \"./CommonTypes\";\r\nexport interface IMovie {\r\n    _id?: string\r\n    name: string\r\n    types: string[];\r\n    areas: string[];\r\n    timeLong: number;\r\n    isHot: boolean;\r\n    isComing: boolean;\r\n    isClassic: boolean;\r\n    description?: string;\r\n    poster?: string;\r\n}\r\n\r\nexport class MovieService {\r\n\r\n    public static async add(movie: IMovie): Promise<IResponseData<IMovie> | IResponseError> {\r\n        const { data } = await axios.post(\"/api/movie\", movie)\r\n        return data;\r\n    }\r\n\r\n    public static async edit(id: string, movie: Partial<IMovie>): Promise<IResponseData<true> | IResponseError> {\r\n        const { data } = await axios.put(\"/api/movie/\" + id, movie);\r\n        return data;\r\n    }\r\n\r\n    public static async delete(id: string): Promise<IResponseData<true> | IResponseError> {\r\n        const { data } = await axios.delete(\"/api/movie/\" + id);\r\n        return data;\r\n    }\r\n\r\n    public static async getMovieById(id: string): Promise<IResponseData<IMovie | null>> {\r\n        const { data } = await axios.get(\"/api/movie/\" + id);\r\n        return data;\r\n    }\r\n\r\n    public static async getMovies(condition: ISearchCondition): Promise<IResponsePageData<IMovie>> {\r\n        // return new Promise(resolve => {\r\n        //     setTimeout(async () => {\r\n        //         const { data } = await axios.get(\"/api/movie\", {\r\n        //             params: condition\r\n        //         });\r\n        //         resolve(data)\r\n        //     }, 1500);\r\n        // })\r\n        const { data } = await axios.get(\"/api/movie\", {\r\n            params: condition\r\n        });\r\n        return data;\r\n    }\r\n}","import { IAction } from \"./ActionTypes\";\r\nimport { IMovie, MovieService } from \"../../services/MovieService\";\r\nimport { ISearchCondition, SwitchType } from \"../../services/CommonTypes\";\r\nimport { ThunkAction } from \"redux-thunk\"\r\nimport { IRootState } from \"../reducers/RootReducer\";\r\n\r\nexport type SaveMoviesAction = IAction<\"movie_save\", {\r\n    movies: IMovie[]\r\n    total: number\r\n}>;\r\n\r\nfunction saveMoviesAction(movies: IMovie[], total: number): SaveMoviesAction {\r\n    return {\r\n        type: \"movie_save\",\r\n        payload: {\r\n            movies,\r\n            total\r\n        }\r\n    }\r\n}\r\n\r\nexport type SetLoadingAction = IAction<\"movie_setLoading\", boolean>\r\n\r\nfunction setLoadingAction(isLoading: boolean): SetLoadingAction {\r\n    return {\r\n        type: \"movie_setLoading\",\r\n        payload: isLoading\r\n    }\r\n}\r\n\r\nexport type SetConditionAction = IAction<\"movie_setCondition\", ISearchCondition>\r\n\r\nfunction setConditionAction(condition: ISearchCondition): SetConditionAction {\r\n    return {\r\n        type: \"movie_setCondition\",\r\n        payload: condition\r\n    }\r\n}\r\n\r\nexport type DeleteAction = IAction<\"movie_delete\", string>\r\n\r\nfunction deleteAction(id: string): DeleteAction {\r\n    return {\r\n        type: \"movie_delete\",\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport type MovieChangeSwitchAction = IAction<\"movie_switch\", {\r\n    type: SwitchType\r\n    newVal: boolean\r\n    id: string\r\n}>\r\n\r\nfunction changeSwitchAction(type: SwitchType, newVal: boolean, id: string): MovieChangeSwitchAction {\r\n    return {\r\n        type: \"movie_switch\",\r\n        payload: {\r\n            type,\r\n            newVal,\r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nexport type MovieActions = SaveMoviesAction | SetConditionAction | SetLoadingAction | DeleteAction | MovieChangeSwitchAction;\r\n\r\n//根据条件从服务器获取电影的数据\r\nfunction fetchMovies(condition: ISearchCondition)\r\n    : ThunkAction<Promise<void>, IRootState, any, MovieActions> {\r\n    return async (dispatch, getState) => {\r\n        //1. 设置加载状态\r\n        dispatch(setLoadingAction(true));\r\n        //2. 设置条件\r\n        dispatch(setConditionAction(condition));\r\n        //3. 获取服务器数据\r\n        const curCondition = getState().movie.condition;\r\n        const resp = await MovieService.getMovies(curCondition);\r\n        //4. 更改仓库的数据\r\n        dispatch(saveMoviesAction(resp.data, resp.total));\r\n        //关闭加载状态\r\n        dispatch(setLoadingAction(false));\r\n    }\r\n}\r\n\r\nfunction deleteMovie(id: string)\r\n    : ThunkAction<Promise<void>, IRootState, any, MovieActions> {\r\n    return async dispatch => {\r\n        dispatch(setLoadingAction(true));\r\n        await MovieService.delete(id);\r\n        dispatch(deleteAction(id));//删除本地仓库中的数据\r\n        dispatch(setLoadingAction(false));\r\n    }\r\n}\r\n\r\nfunction changeSwitch(type: SwitchType, newVal: boolean, id: string)\r\n    : ThunkAction<Promise<void>, IRootState, any, MovieActions> {\r\n    return async dispatch => {\r\n        dispatch(changeSwitchAction(type, newVal, id));\r\n        await MovieService.edit(id, {\r\n            [type]: newVal\r\n        })\r\n    }\r\n}\r\n\r\nexport default {\r\n    saveMoviesAction,\r\n    setLoadingAction,\r\n    setConditionAction,\r\n    deleteAction,\r\n    fetchMovies,\r\n    deleteMovie,\r\n    changeSwitchAction,\r\n    changeSwitch\r\n}","import MovieTable, { IMovieTableEvents } from \"../../components/MovieTable\"\r\nimport { connect } from \"react-redux\";\r\nimport { IRootState } from \"../../redux/reducers/RootReducer\";\r\nimport { Dispatch } from \"react\";\r\nimport MovieAction from \"../../redux/actions/MovieAction\";\r\nimport { IMovieState } from \"../../redux/reducers/MovieReducer\";\r\n\r\nfunction mapStateToProps(state: IRootState): IMovieState {\r\n    return state.movie;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): IMovieTableEvents {\r\n    return {\r\n        onLoad() {\r\n            dispatch(MovieAction.fetchMovies({\r\n                page: 1,\r\n                limit: 10,\r\n                key: \"\"\r\n            }))\r\n        },\r\n        onSwitchChange(type, newState, id) {\r\n            dispatch(MovieAction.changeSwitch(type, newState, id));\r\n        },\r\n        async onDelete(id) {\r\n            await dispatch(MovieAction.deleteMovie(id))\r\n        },\r\n        onChange(newPage) {\r\n            dispatch(MovieAction.fetchMovies({\r\n                page: newPage\r\n            }))\r\n        },\r\n        onKeyChange(key){\r\n            dispatch(MovieAction.setConditionAction({\r\n                key\r\n            }))\r\n        },\r\n        onSearch(){\r\n            dispatch(MovieAction.fetchMovies({\r\n                page: 1\r\n            }))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieTable)\r\n","import React from \"react\";\r\nimport { Upload, Icon, message, Modal } from \"antd\";\r\nimport { UploadFile } from \"antd/lib/upload/interface\";\r\nimport { IResponseData, IResponseError } from \"../services/CommonTypes\";\r\n\r\ninterface IImgUploaderProps {\r\n  value?: string\r\n  onChange?: (imgUrl: string) => void\r\n}\r\n\r\ninterface IImgState {\r\n  showModal: boolean\r\n}\r\n\r\nexport default class extends React.Component<IImgUploaderProps, IImgState> {\r\n\r\n  state: IImgState = {\r\n    showModal: false\r\n  }\r\n\r\n  private getUploadContent() {\r\n    if (this.props.value) {\r\n      return null;\r\n    }\r\n    else {\r\n      return (\r\n        <div>\r\n          <Icon type=\"plus\" />\r\n          <div>\r\n            点击上传\r\n                    </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  private getFileList(): UploadFile[] {\r\n    if (this.props.value) {\r\n      return [\r\n        {\r\n          uid: this.props.value,\r\n          name: this.props.value,\r\n          url: this.props.value\r\n        }\r\n      ]\r\n    }\r\n    return [];\r\n  }\r\n\r\n  async handleRequest(p: any) {\r\n    let formData = new FormData();\r\n    formData.append(p.filename, p.file);\r\n    //fetch api\r\n    const request = new Request(p.action, {\r\n      method: \"post\",\r\n      body: formData\r\n    });\r\n    const resp: IResponseData<string> | IResponseError = await fetch(request).then(resp => resp.json());\r\n    if (resp.err) {\r\n      //有错误\r\n      message.error(\"上传失败！\");\r\n    }\r\n    else {\r\n      //触发回调\r\n      if (this.props.onChange) {\r\n        this.props.onChange(resp.data!);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Upload\r\n          action=\"/api/upload\"\r\n          name=\"imgfile\"\r\n          accept=\".jpg,.png,.gif\"\r\n          listType=\"picture-card\"\r\n          fileList={this.getFileList()}\r\n          customRequest={this.handleRequest.bind(this)}\r\n          onRemove={() => {\r\n            if (this.props.onChange) {\r\n              this.props.onChange(\"\")\r\n            }\r\n\r\n          }}\r\n          onPreview={() => {\r\n            this.setState({\r\n              showModal: true\r\n            })\r\n          }}\r\n        >\r\n          {this.getUploadContent()}\r\n        </Upload>\r\n        <Modal visible={this.state.showModal} footer={null} onCancel={() => {\r\n          this.setState({\r\n            showModal: false\r\n          })\r\n        }}>\r\n          <img alt=\"\" style={{ width: '100%' }} src={this.props.value} />\r\n        </Modal>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Form, Input, Button, Checkbox, InputNumber, Switch, message } from \"antd\";\r\nimport { WrappedFormUtils } from \"antd/lib/form/Form\";\r\nimport { IMovie } from \"../services/MovieService\";\r\nimport ImgUploader from \"./ImgUploader\";\r\nimport { withRouter, RouteComponentProps } from \"react-router\";\r\n\r\ninterface IFormProp extends RouteComponentProps {\r\n    form: WrappedFormUtils<any>\r\n    onSubmit: (movie: IMovie) => Promise<string>\r\n    movie?: IMovie\r\n}\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        span: 4\r\n    },\r\n    wrapperCol: {\r\n        span: 19,\r\n        offset: 1\r\n    }\r\n};\r\n\r\nconst AllAreas: { label: string, value: string }[] = [\r\n    { label: \"中国大陆\", value: \"中国大陆\" },\r\n    { label: \"美国\", value: \"美国\" },\r\n    { label: \"中国台湾\", value: \"中国台湾\" },\r\n    { label: \"中国香港\", value: \"中国香港\" },\r\n];\r\n\r\nconst AreaGroups = Checkbox.Group;\r\n\r\nconst AllTypes: { label: string, value: string }[] = [\r\n    { label: \"喜剧\", value: \"喜剧\" },\r\n    { label: \"灾难\", value: \"灾难\" },\r\n    { label: \"动作\", value: \"动作\" },\r\n    { label: \"爱情\", value: \"爱情\" },\r\n];\r\n\r\nconst TypeGroups = Checkbox.Group;\r\n\r\nclass MovieForm extends React.Component<IFormProp> {\r\n\r\n    private handleSubmit(e: React.FormEvent<any>) {\r\n        e.preventDefault();\r\n        //获取表单数据\r\n        this.props.form.validateFields(async errors => {\r\n            if (!errors) {\r\n                const formData = this.props.form.getFieldsValue();\r\n                const result = await this.props.onSubmit(formData as IMovie);\r\n                if (result) {\r\n                    message.error(result)\r\n                }\r\n                else {\r\n                    message.success(\"处理成功\", 1, () => {\r\n                        //跳转页面\r\n                        this.props.history.push(\"/movie\")\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        return (\r\n            <Form\r\n                onSubmit={this.handleSubmit.bind(this)}\r\n                {...formItemLayout}\r\n                style={{ width: \"400px\" }}>\r\n                <Form.Item\r\n                    label=\"电影名称\"\r\n                >\r\n                    {getFieldDecorator<IMovie>(\"name\", {\r\n                        rules: [{ required: true, message: '请填写电影名称' }],\r\n                    })(\r\n                        <Input />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"封面图\"\r\n                >\r\n                    {getFieldDecorator<IMovie>(\"poster\")(\r\n                        <ImgUploader />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"地区\"\r\n                >\r\n                    {getFieldDecorator<IMovie>(\"areas\", {\r\n                        rules: [{ required: true, message: '请选择地区' }],\r\n                    })(\r\n                        <AreaGroups options={AllAreas}></AreaGroups>\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"类型\"\r\n                >\r\n                    {getFieldDecorator<IMovie>(\"types\", {\r\n                        rules: [{ required: true, message: '请选择类型' }],\r\n                    })(\r\n                        <TypeGroups options={AllTypes}></TypeGroups>\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"时长(分钟)\"\r\n                >\r\n                    {getFieldDecorator<IMovie>(\"timeLong\", {\r\n                        rules: [{ required: true, message: '请填写时长' }],\r\n                    })(\r\n                        <InputNumber min={1} step={10} />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"正在热映\"\r\n                >\r\n                    {getFieldDecorator<IMovie>(\"isHot\", {\r\n                        initialValue: false,\r\n                        valuePropName: \"checked\"\r\n                    })(\r\n                        <Switch />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"即将上映\"\r\n                >\r\n                    {getFieldDecorator<IMovie>(\"isComing\", {\r\n                        initialValue: false,\r\n                        valuePropName: \"checked\"\r\n                    })(\r\n                        <Switch />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"经典影片\"\r\n                >\r\n                    {getFieldDecorator<IMovie>(\"isClassic\", {\r\n                        initialValue: false,\r\n                        valuePropName: \"checked\"\r\n                    })(\r\n                        <Switch />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"描述\"\r\n                >\r\n                    {getFieldDecorator<IMovie>(\"description\")(\r\n                        <Input.TextArea />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    labelCol={{ span: 0 }}\r\n                    wrapperCol={{ span: 19, offset: 5 }}\r\n                >\r\n                    <Button type=\"primary\" htmlType=\"submit\">提交</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\ntype MovieFields = {\r\n    [P in Exclude<keyof IMovie, \"_id\">]: any\r\n}\r\n\r\nfunction getDefaultField(movie: IMovie): MovieFields {\r\n    const obj: any = {};\r\n    for (const key in movie) {\r\n        obj[key] = Form.createFormField({\r\n            value: movie[key]\r\n        })\r\n    }\r\n    console.log(obj);\r\n    return obj;\r\n}\r\n\r\nexport default withRouter(Form.create<IFormProp>({\r\n    mapPropsToFields: props => {\r\n        if (props.movie) {\r\n            return getDefaultField(props.movie);\r\n        }\r\n    }\r\n})(MovieForm));","import React from \"react\"\r\nimport MovieForm from \"../../components/MovieForm\";\r\nimport { MovieService } from \"../../services/MovieService\";\r\n\r\nexport default class extends React.Component {\r\n    render(){\r\n        return (\r\n            <MovieForm onSubmit={async movie=>{\r\n                const resp = await MovieService.add(movie)\r\n                if(resp.data){\r\n                    return \"\";\r\n                }\r\n                else{\r\n                    return resp.err;\r\n                }\r\n            }}></MovieForm>\r\n        );\r\n    }\r\n}","import React from \"react\"\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport MovieForm from \"../../components/MovieForm\";\r\nimport { MovieService, IMovie } from \"../../services/MovieService\";\r\n\r\ninterface IParams {\r\n    id: string\r\n}\r\n\r\ninterface EditPageState {\r\n    movie?: IMovie\r\n}\r\n\r\nexport default class extends React.Component<RouteComponentProps<IParams>, EditPageState> {\r\n    state: EditPageState = {\r\n        movie: undefined\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const resp = await MovieService.getMovieById(this.props.match.params.id);\r\n        if (resp.data) {\r\n            this.setState({\r\n                movie: resp.data\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MovieForm\r\n                movie={this.state.movie}\r\n                onSubmit={async movie => {\r\n                    const resp = await MovieService.edit(this.props.match.params.id, movie)\r\n                    if (resp.data) {\r\n                        return \"\";\r\n                    }\r\n                    else {\r\n                        return resp.err;\r\n                    }\r\n                }}></MovieForm>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { NavLink, Route } from \"react-router-dom\"\r\nimport Home from \"./Home\";\r\nimport MovieList from \"./movie/MovieList\"\r\nimport AddMovie from \"./movie/AddMovie\"\r\nimport EditMovie from \"./movie/EditMovie\"\r\nimport { Layout, Menu } from \"antd\"\r\n\r\nconst {\r\n    Header, Sider, Content,\r\n} = Layout;\r\n\r\nconst _Layout: React.FC = function () {\r\n    return (\r\n        <div className=\"container\">\r\n            <Layout>\r\n                <Header className=\"header\">\r\n                    <NavLink to=\"/\">猫眼电影管理系统</NavLink>\r\n                </Header>\r\n                <Layout>\r\n                    <Sider>\r\n                        <Menu\r\n                            mode=\"inline\"\r\n                            theme=\"dark\"\r\n                        >\r\n                            <Menu.Item key=\"1\">\r\n                                <NavLink to=\"/movie\">电影列表</NavLink>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"2\">\r\n                                <NavLink to=\"/movie/add\">添加电影</NavLink>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </Sider>\r\n                    <Content>\r\n                        <div className=\"main\">\r\n                            <Route path=\"/\" component={Home} exact={true}></Route>\r\n                            <Route path=\"/movie\" exact={true} component={MovieList}></Route>\r\n                            <Route path=\"/movie/add\" component={AddMovie}></Route>\r\n                            <Route path=\"/movie/edit/:id\" component={EditMovie}></Route>\r\n                        </div>\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default _Layout;","import { IMovie } from \"../../services/MovieService\";\r\nimport { ISearchCondition } from \"../../services/CommonTypes\";\r\nimport { MovieActions, SaveMoviesAction, SetConditionAction, SetLoadingAction, DeleteAction, MovieChangeSwitchAction } from \"../actions/MovieAction\";\r\nimport { Reducer } from \"react\";\r\n\r\n// 描述电影列表的状态类型\r\n\r\nexport type IMovieCondition = Required<ISearchCondition>\r\n\r\n/**\r\n * 电影状态\r\n */\r\nexport interface IMovieState {\r\n    /**\r\n     * 电影数组\r\n     */\r\n    data: IMovie[]\r\n    /**\r\n     * 查询条件\r\n     */\r\n    condition: IMovieCondition\r\n    /**\r\n     * 总记录数\r\n     */\r\n    total: number\r\n    /**\r\n     * 是否正在加载数据\r\n     */\r\n    isLoading: boolean\r\n\r\n    /**\r\n     * 总页数\r\n     */\r\n    totalPage: number\r\n}\r\n\r\nconst defaultState: IMovieState = {\r\n    data: [],\r\n    condition: {\r\n        page: 1,\r\n        limit: 10,\r\n        key: \"\"\r\n    },\r\n    total: 0,\r\n    isLoading: false,\r\n    totalPage: 0\r\n}\r\n\r\ntype MovieReducer<A> = Reducer<IMovieState, A>\r\n\r\nconst saveMovie: MovieReducer<SaveMoviesAction> = function (state, action) {\r\n    return {\r\n        ...state,\r\n        data: action.payload.movies,\r\n        total: action.payload.total,\r\n        totalPage: Math.ceil(action.payload.total / state.condition.limit)\r\n    };\r\n}\r\n\r\nconst setCondition: MovieReducer<SetConditionAction> = function (state, action) {\r\n    const newState = {\r\n        ...state,\r\n        condition: {\r\n            ...state.condition,\r\n            ...action.payload\r\n        }\r\n    };\r\n    newState.totalPage = Math.ceil(newState.total / newState.condition.limit);\r\n    return newState;\r\n}\r\n\r\nconst setLoading: MovieReducer<SetLoadingAction> = function (state, action) {\r\n    return {\r\n        ...state,\r\n        isLoading: action.payload\r\n    };\r\n}\r\n\r\nconst deleteMovie: MovieReducer<DeleteAction> = function (state, action) {\r\n    return {\r\n        ...state,\r\n        data: state.data.filter(m => m._id !== action.payload),\r\n        total: state.total - 1,\r\n        totalPage: Math.ceil((state.total - 1) / state.condition.limit)\r\n    }\r\n}\r\n\r\nconst changeSwitch: MovieReducer<MovieChangeSwitchAction> = function (state, action) {\r\n    // action.payload.\r\n    //1. 根据id找到对象\r\n    const movie = state.data.find(d => d._id === action.payload.id);\r\n    if (!movie) {\r\n        return state;\r\n    }\r\n    //2. 对象克隆\r\n    const newMoive = { ...movie };\r\n    newMoive[action.payload.type] = action.payload.newVal;\r\n\r\n    //3. 将对象重新放入到数组\r\n    const newData = state.data.map(d => {\r\n        if (d._id === action.payload.id) {\r\n            return newMoive;\r\n        }\r\n        return d;\r\n    })\r\n\r\n    return {\r\n        ...state,\r\n        data:newData\r\n    }\r\n}\r\n\r\n\r\nexport default function (state: IMovieState = defaultState, action: MovieActions) {\r\n    // 可辨识联合\r\n    switch (action.type) {\r\n        case \"movie_delete\":\r\n            return deleteMovie(state, action);\r\n        case \"movie_save\":\r\n            return saveMovie(state, action);\r\n        case \"movie_setCondition\":\r\n            return setCondition(state, action);\r\n        case \"movie_setLoading\":\r\n            return setLoading(state, action);\r\n        case \"movie_switch\":\r\n            return changeSwitch(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport movie, { IMovieState } from \"./MovieReducer\"\r\n\r\n/**\r\n * 整个网站的根状态\r\n */\r\nexport interface IRootState {\r\n    movie: IMovieState\r\n}\r\n\r\nexport const rootReducer = combineReducers({\r\n    movie\r\n})","import { createStore, applyMiddleware } from \"redux\";\r\nimport { rootReducer, IRootState } from \"./reducers/RootReducer\"\r\nimport logger from \"redux-logger\";\r\nimport thunk, { ThunkMiddleware } from \"redux-thunk\";\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk as ThunkMiddleware<IRootState>, logger)\r\n);","import React from 'react';\r\nimport Layout from \"./pages/Layout\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\"\r\nimport { store } from \"./redux/store\"\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <Route path=\"/\" component={Layout}></Route>\r\n            </BrowserRouter>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport \"antd/dist/antd.css\";\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n// 界面\r\n// antd: UI库"],"sourceRoot":""}